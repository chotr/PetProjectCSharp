<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address:</value>
  </data>
  <data name="AddressBook" xml:space="preserve">
    <value>Address book</value>
  </data>
  <data name="AddressStore" xml:space="preserve">
    <value>Hamlet 6, Linh Trung Ward, Thu Duc District, Ho Chi Minh City, Vietnam</value>
  </data>
  <data name="AddtoCard" xml:space="preserve">
    <value>Add to cart</value>
  </data>
  <data name="AddToCart" xml:space="preserve">
    <value>Add to cart</value>
  </data>
  <data name="AddToCartSuccess" xml:space="preserve">
    <value>Add To Cart Success!</value>
  </data>
  <data name="At" xml:space="preserve">
    <value>At</value>
  </data>
  <data name="AtNow" xml:space="preserve">
    <value>at now</value>
  </data>
  <data name="Availibility" xml:space="preserve">
    <value>Availibility</value>
  </data>
  <data name="BasicInfo" xml:space="preserve">
    <value>Basic infomation</value>
  </data>
  <data name="Brand" xml:space="preserve">
    <value>Brand</value>
  </data>
  <data name="BrowseCategories" xml:space="preserve">
    <value>Browse Categories</value>
  </data>
  <data name="BuyMoreItem" xml:space="preserve">
    <value>No, I want to buy more items</value>
  </data>
  <data name="BuyNow" xml:space="preserve">
    <value>Buy now</value>
  </data>
  <data name="CancelledBill" xml:space="preserve">
    <value>Cancelled bill</value>
  </data>
  <data name="CardProduct" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="Cart" xml:space="preserve">
    <value>Cart</value>
  </data>
  <data name="Cash" xml:space="preserve">
    <value>Cash</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="Checkout" xml:space="preserve">
    <value>Checkout</value>
  </data>
  <data name="CheckQuality" xml:space="preserve">
    <value>Check quality</value>
  </data>
  <data name="ChooseAvailableAddress" xml:space="preserve">
    <value>Choose your available address</value>
  </data>
  <data name="ChoosePayment" xml:space="preserve">
    <value>Payment:</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="ConfirmPass" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="Content" xml:space="preserve">
    <value>Free Shipping on all order</value>
  </data>
  <data name="ContentFooter" xml:space="preserve">
    <value>Don't hesitate to tell me if you have any problems!</value>
  </data>
  <data name="ContentSliderIndex" xml:space="preserve">
    <value>Our website specializes in providing quality pets at reasonable prices. Hurry up to order to get more offers.</value>
  </data>
  <data name="ContinueShopping" xml:space="preserve">
    <value>ContinueShopping</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="DeliveredBill" xml:space="preserve">
    <value>Delivered bill</value>
  </data>
  <data name="Delivery" xml:space="preserve">
    <value>Free Delivery</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email:</value>
  </data>
  <data name="EmptyCart" xml:space="preserve">
    <value>Cart is empty!</value>
  </data>
  <data name="FashonCategory" xml:space="preserve">
    <value>Fashon Category</value>
  </data>
  <data name="Free" xml:space="preserve">
    <value>Free</value>
  </data>
  <data name="FreeShipping" xml:space="preserve">
    <value>Free Shipping</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full name:</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="GoBackToShop" xml:space="preserve">
    <value>Go back to shop</value>
  </data>
  <data name="HaveError" xml:space="preserve">
    <value>Have error</value>
  </data>
  <data name="Hi" xml:space="preserve">
    <value>Hi</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="ManageYourAccount" xml:space="preserve">
    <value>Manage your account</value>
  </data>
  <data name="Manufactory" xml:space="preserve">
    <value>Manufactory</value>
  </data>
  <data name="NewPass" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note:</value>
  </data>
  <data name="OldPass" xml:space="preserve">
    <value>Old password</value>
  </data>
  <data name="OnWayBill" xml:space="preserve">
    <value>On way bill</value>
  </data>
  <data name="OrderID" xml:space="preserve">
    <value>Order ID:</value>
  </data>
  <data name="OrderInfo" xml:space="preserve">
    <value>Order info</value>
  </data>
  <data name="OrderNow" xml:space="preserve">
    <value>ORDER NOW</value>
  </data>
  <data name="OrderReceived" xml:space="preserve">
    <value>Your order has been received</value>
  </data>
  <data name="Page" xml:space="preserve">
    <value>Page</value>
  </data>
  <data name="PageNotFound" xml:space="preserve">
    <value>Page not found</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Payment" xml:space="preserve">
    <value>Secure Payment</value>
  </data>
  <data name="PaymentAvailable" xml:space="preserve">
    <value>Payment available</value>
  </data>
  <data name="PaymentMethod" xml:space="preserve">
    <value>Payment method:</value>
  </data>
  <data name="PermanentAddress" xml:space="preserve">
    <value>Permanent address:</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone:</value>
  </data>
  <data name="Policy" xml:space="preserve">
    <value>Return Policy</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="ProductDetail" xml:space="preserve">
    <value>Product detail page</value>
  </data>
  <data name="ProductFilters" xml:space="preserve">
    <value>Product Filters</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="PurchaseInfo" xml:space="preserve">
    <value>PURCHASE INFO</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="ReceivedBill" xml:space="preserve">
    <value>Received bill</value>
  </data>
  <data name="RedirectToPayPal" xml:space="preserve">
    <value>The payment will be redirect to PayPal Sandbox</value>
  </data>
  <data name="SampleProduct" xml:space="preserve">
    <value>Sample Product</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SaveMyAvatar" xml:space="preserve">
    <value>Save my avatar</value>
  </data>
  <data name="SearchButton" xml:space="preserve">
    <value>Click here to search</value>
  </data>
  <data name="SetDefault" xml:space="preserve">
    <value>Set default</value>
  </data>
  <data name="Shipping" xml:space="preserve">
    <value>Shipping</value>
  </data>
  <data name="ShopCategoryPage" xml:space="preserve">
    <value>Shop Category page</value>
  </data>
  <data name="ShoppingCartTitle" xml:space="preserve">
    <value>Shopping Cart</value>
  </data>
  <data name="Sign" xml:space="preserve">
    <value>Sign</value>
  </data>
  <data name="SigninInfo" xml:space="preserve">
    <value>Signin infomation</value>
  </data>
  <data name="Signup" xml:space="preserve">
    <value>Signup</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="SubTotal" xml:space="preserve">
    <value>Subtotal</value>
  </data>
  <data name="Support" xml:space="preserve">
    <value>24/7 Support</value>
  </data>
  <data name="TextSampleProduct1" xml:space="preserve">
    <value>We believe you will be very satisfied with our sample products below</value>
  </data>
  <data name="TextSampleProduct2" xml:space="preserve">
    <value>Please trust our shop</value>
  </data>
  <data name="ThankYou" xml:space="preserve">
    <value>Thank you</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TotalToPay" xml:space="preserve">
    <value>Total to pay:</value>
  </data>
  <data name="TrustedProduct" xml:space="preserve">
    <value>Trusted product</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="YouHaveAll" xml:space="preserve">
    <value>You have all</value>
  </data>
  <data name="YouNoBill" xml:space="preserve">
    <value>You have no bill at this time</value>
  </data>
  <data name="YourAddress" xml:space="preserve">
    <value>Your address</value>
  </data>
  <data name="YourAvatar" xml:space="preserve">
    <value>Your Avatar</value>
  </data>
  <data name="YourOrder" xml:space="preserve">
    <value>Your Order</value>
  </data>
</root>